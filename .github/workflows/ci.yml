name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '22.x'

jobs:
  # Shared dependency installation
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Upload node_modules
      uses: actions/upload-artifact@v4
      with:
        name: node-modules
        path: node_modules/
        retention-days: 1

  # Lint and Type Check
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: install
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Download node_modules
      uses: actions/download-artifact@v4
      with:
        name: node-modules
        path: node_modules/
    
    - name: Fix node_modules permissions
      run: |
        chmod -R +x node_modules/.bin/
        export PATH="$PWD/node_modules/.bin:$PATH"
    
    - name: Run TypeScript type check
      run: npx tsc --noEmit
    
    - name: Run ESLint (if configured)
      run: npx --yes eslint src/ --ext .ts,.js || echo "ESLint not configured, skipping"
      continue-on-error: true

  # Test Suite
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: install
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Download node_modules
      uses: actions/download-artifact@v4
      with:
        name: node-modules
        path: node_modules/
    
    - name: Fix node_modules permissions
      run: |
        chmod -R +x node_modules/.bin/
        export PATH="$PWD/node_modules/.bin:$PATH"
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/coverage-final.json
        fail_ci_if_error: false
        verbose: true

  # Build and Validate
  build:
    name: Build & Validate
    runs-on: ubuntu-latest
    needs: [install, lint, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Download node_modules
      uses: actions/download-artifact@v4
      with:
        name: node-modules
        path: node_modules/
    
    - name: Fix node_modules permissions
      run: |
        chmod -R +x node_modules/.bin/
        export PATH="$PWD/node_modules/.bin:$PATH"
    
    - name: Build project
      run: npm run build
    
    - name: Validate build output
      run: |
        if [ ! -f "dist/index.js" ]; then
          echo "Build failed: dist/index.js not found"
          exit 1
        fi
        echo "Build validation successful"
    
    - name: Test built package
      run: |
        node dist/index.js --help || echo "Package test completed"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7
